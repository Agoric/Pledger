
# Based on default configuration file for ssc v0.1.0 (ac944a6).

# Shell command to build an application.
build: node build.js

# A unique ID that identifies the bundle (used by all app stores).
bundle_identifier: com.agoric.endo

# A string that gets used in the about dialog and package meta info.
copyright: (c) Endo Contributors

# Advanced Compiler Settings for debug purposes (ie C++ compiler -g, etc).
debug_flags: -g

# A short description of the app.
description: Fearless Cooperator

# An array of environment variables, separated by commas.
# env: USER, TMPDIR, PWD

# The name of the file to be output.
executable: endo

# Advanced Compiler Settings (ie C++ compiler -02, -03, etc).
flags: -O3

# Set the limit of files that can be opened by your process.
file_limit: 1024

# A directory is where your application's code is located.
# input: src

# Localization
# lang: en-us

# A String used in the about dialog and meta info.
# maintainer: Endo Contributors

# The name of the program
name: Endo

# The binary output path. It's recommended to add this path to .gitignore.
output: dist

# TODO: maybe the user doesn't need to know about this?
# revision: 123

# The initial title of the window (can have spaces and symbols etc).
title: Endo

# A string that indicates the version of the application. It should be a semver triple like 1.0.0
version: 0.0.1

# The initial width of the first window.
width: 1024

# The initial height of the first window.
height: 750

#
# Windows
# ---
#

# The command to execute to spawn the “back-end” process.
# win_cmd: node.exe backend.mjs

# The icon to use for identifying your app on Windows.
# win_icon:

# The icon to use for identifying your app on Windows.
# win_logo:

# A relative path to the pfx file used for signing.
# win_pfx: certs/cert.pfx

# The signing information needed by the appx api.
# win_publisher: CN=Beep Boop Corp., O=Beep Boop Corp., L=San Francisco, S=California, C=US

#
# Linux
# ---
#

# Helps to make your app searchable in Linux desktop environments.
# linux_categories: Developer Tools

# The command to execute to spawn the "back-end" process.
# linux_cmd: ./node backend.mjs

# The icon to use for identifying your app in Linux desktop environments.
# linux_icon:

#
# MacOS
# ---
#

# macOS code signing guide: https://sockets.sh/guides/#macos-1

# Mac App Store icon
mac_appstore_icon: gen/endo-mac-1024.png

# A category in the App Store
# mac_category:

# The command to execute to spawn the "back-end" process.
# mac_cmd: ./node backend.mjs

# The icon to use for identifying your app on MacOS.
# mac_icon:

# TODO description & value
# mac_sign:

# TODO description & value
# mac_codesign_identity:

# TODO description & value
# mac_sign_paths:

#
# iOS
# ---
#

# iOS code signing guide: https://sockets.sh/guides/#ios-1

# TODO description & value
# ios_codesign_identity:

# Describes how Xcode should export the archive. Available options: app-store, package, ad-hoc, enterprise, development, and developer-id.
# ios_distribution_method: ad-hoc

# A path to the provisioning profile used for signing iOS app.
# ios_provisioning_profile:

# which device to target when building for the simulator
# ios_simulator_device: iPhone 13
